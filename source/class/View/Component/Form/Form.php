<?php

namespace Planck\Extension\ViewComponent\View\Component;

use Phi\HTML\Element;
use Planck\Extension\ViewComponent\View\Component\Form\Field;
use Planck\View\Component;

class Form extends Component
{

    protected $method = 'POST';
    protected $action = '?';


    /**
     * @var Field
     */
    protected $fields = [];

    /**
     * @var Element
     */
    protected $fieldWrapper;


    public function __construct()
    {
        parent::__construct('form');
    }


    public function setFieldWrapper($function)
    {
        $this->fieldWrapper = $function;
        return $this;
    }


    public function addField($name, $descriptor = array())
    {

        $field = new Field($name);
        if(!empty($descriptor)) {
            $field->loadDescriptor($descriptor);
        }
        $this->fields[$name] = $field;

        if($element = $field->getElement()) {



            if($this->fieldWrapper) {
                $wrapper = call_user_func_array($this->fieldWrapper, array($element));
                $this->dom->addChild($wrapper);
            }
            else {
                $this->dom->addChild($element);
            }
        }
    }


    public function action($action = null)
    {
        if($action === null) {
            return $this->action;
        }
        else {
            $this->action = $action;
            $this->dom->setAttribute('action', $this->action);
            return $this;
        }
    }

    public function method($method = null)
    {
        if($method === null) {
            return $this->method;
        }
        else {
            $this->method = $method;
            $this->dom->setAttribute('method', $this->method);
            return $this;
        }
    }


    public function render()
    {


        return parent::render(); // TODO: Change the autogenerated stub
    }


}